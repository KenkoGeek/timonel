// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`YAML Snapshot Tests > Edge case snapshots > should handle complex nested structures consistently > complex nested structure snapshot 1`] = `
"database:
  primary:
    host: primary.db.local
    port: 5432
    credentials:
      username: admin
      passwordRef: db-secret
  replicas:
    - host: replica1.db.local
      port: 5432
    - host: replica2.db.local
      port: 5432
features:
  authentication:
    enabled: true
    provider: oauth2
  monitoring:
    enabled: true
    metrics:
      - cpu
      - memory
      - requests
  caching:
    enabled: false
"
`;

exports[`YAML Snapshot Tests > Edge case snapshots > should handle zero values consistently > zero values snapshot 1`] = `
"port: 0
replicas: 0
timeout: 0
enabled: false
config: null
resources: {}
env: []
"
`;

exports[`YAML Snapshot Tests > Environment values snapshots > should generate consistent environment-specific values > dev environment values 1`] = `
"replicas: 1
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi
"
`;

exports[`YAML Snapshot Tests > Environment values snapshots > should generate consistent environment-specific values > prod environment values 1`] = `
"replicas: 10
resources:
  limits:
    cpu: 2000m
    memory: 2Gi
  requests:
    cpu: 1000m
    memory: 1Gi
"
`;

exports[`YAML Snapshot Tests > HelmChartWriter snapshots > should generate Chart.yaml matching expected format > Chart.yaml content 1`] = `
"apiVersion: v2
name: test-app
version: 0.1.0
description: A test Helm chart
type: application
appVersion: 1.0.0
"
`;

exports[`YAML Snapshot Tests > HelmChartWriter snapshots > should generate values.yaml matching expected format > values.yaml content 1`] = `
"image:
  repository: nginx
  tag: "1.27"
  pullPolicy: IfNotPresent
replicas: 2
service:
  type: ClusterIP
  port: 80
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > Chart.yaml content 1`] = `
"apiVersion: v2
name: snapshot-test
version: 1.0.0
description: Snapshot test chart
type: application
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > deployment-snapshot-app.yaml content 1`] = `
"apiVersion: apps/v1
kind: Deployment
metadata:
  name: snapshot-app
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/name: '{{ include "chart.name" . }}'
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.Version }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
spec:
  replicas: .nan
  selector:
    matchLabels:
      app: snapshot-app
  template:
    metadata:
      labels:
        app: snapshot-app
    spec:
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: snapshot-app
          ports:
            - containerPort: 80
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > manifest-1.yaml content 1`] = `
"apiVersion: apps/v1
kind: Deployment
metadata:
  name: snapshot-app
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/name: '{{ include "chart.name" . }}'
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.Version }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
spec:
  replicas: .nan
  selector:
    matchLabels:
      app: snapshot-app
  template:
    metadata:
      labels:
        app: snapshot-app
    spec:
      containers:
        - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          name: snapshot-app
          ports:
            - containerPort: 80
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > manifest-2.yaml content 1`] = `
"apiVersion: v1
kind: Service
metadata:
  name: snapshot-service
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/name: '{{ include "chart.name" . }}'
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.Version }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: snapshot-app
  type: ClusterIP
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > service-snapshot-service.yaml content 1`] = `
"apiVersion: v1
kind: Service
metadata:
  name: snapshot-service
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/name: '{{ include "chart.name" . }}'
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.Version }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    app.kubernetes.io/part-of: "{{ .Chart.Name }}"
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: snapshot-app
  type: ClusterIP
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > values.yaml content 1`] = `
"image:
  repository: nginx
  tag: latest
replicas: 3
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > values-dev.yaml content 1`] = `
"replicas: 1
"
`;

exports[`YAML Snapshot Tests > Rutter snapshots > should generate consistent YAML output > values-prod.yaml content 1`] = `
"replicas: 5
"
`;
