name: Manual Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release from'
        required: true
        default: 'main'
        type: string
      version:
        description: 'Version to release (e.g., 0.5.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Validate version format
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 0.5.0)"
            exit 1
          fi

      - name: Update package.json version
        run: |
          pnpm version ${{ inputs.version }} --no-git-tag-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Update CHANGELOG.md
        run: |
          DATE=$(date -u +"%Y-%m-%d")
          VERSION="${{ inputs.version }}"

          # Create new changelog entry
          sed -i "s/## \[Unreleased\]/## [Unreleased]\n\n## [${VERSION}] - ${DATE}/" CHANGELOG.md

          git add CHANGELOG.md package.json
          git commit -m "chore: release v${VERSION}"

      - name: Build and test
        run: |
          pnpm run build
          pnpm run lint
          pnpm run test

      - name: Create and push tag
        run: |
          VERSION="${{ inputs.version }}"
          git tag -a "v${VERSION}" -m "Release v${VERSION}"
          git push origin ${{ inputs.branch }}
          git push origin "v${VERSION}"

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ inputs.version }}
          release_name: Release v${{ inputs.version }}
          body: |
            Release v${{ inputs.version }}

            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false

      - name: Publish to npm
        run: pnpm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
