name: Automated Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release from'
        required: true
        default: 'main'
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  check-status:
    runs-on: ubuntu-latest
    steps:
      - name: Check CI Status
        uses: actions/github-script@v7
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ inputs.branch }}'
            });

            const requiredChecks = [
              'build (20)',
              'build (22)',
              'Code scanning results / CodeQL'
            ];
            const failedChecks = [];

            for (const checkName of requiredChecks) {
              const check = checks.check_runs.find(c => c.name === checkName);
              if (!check || check.conclusion !== 'success') {
                failedChecks.push(checkName);
              }
            }

            if (failedChecks.length > 0) {
              core.setFailed(`Required checks failed: ${failedChecks.join(', ')}`);
            }

  release:
    runs-on: ubuntu-latest
    environment: npm-prd
    needs: check-status
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Build and test
        run: |
          pnpm run build
          pnpm run lint
          pnpm run test

      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
