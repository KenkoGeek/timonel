name: Test Suite

on:
  push:
    branches: [main, develop, 'chore/*', 'feat/*', 'fix/*']
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Run type checking
        run: pnpm typecheck

      - name: Run unit tests
        run: pnpm test:unit

      - name: Generate coverage report
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/coverage-final.json
          flags: unit-tests
          name: unit-tests-${{ matrix.node-version }}

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: '1.29.0'

      - name: Install kubeconform
        run: |
          curl -L https://github.com/yannh/kubeconform/releases/latest/download/kubeconform-linux-amd64.tar.gz | tar xz
          sudo mv kubeconform /usr/local/bin

      - name: Verify tools installation
        run: |
          helm version
          kubectl version --client
          kubeconform -v

      - name: Build project
        run: pnpm build

      - name: Run integration tests
        run: pnpm test:integration

      - name: Upload integration test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-charts
          path: tests/integration/__charts__/
          retention-days: 7

  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Run ESLint
        run: pnpm lint

      - name: Check Prettier formatting
        run: pnpm format:check

      - name: Check Markdown formatting
        run: pnpm md:lint

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Run security audit
        run: pnpm security:audit

      - name: Run security linting
        run: pnpm security:lint

  test-matrix:
    name: Test Matrix Complete
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, lint-and-format, security-audit]
    if: always()

    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.unit-tests.result }}" == "failure" || 
                "${{ needs.integration-tests.result }}" == "failure" || 
                "${{ needs.lint-and-format.result }}" == "failure" || 
                "${{ needs.security-audit.result }}" == "failure" ]]; then
            echo "One or more test jobs failed"
            exit 1
          else
            echo "All tests passed successfully"
          fi
